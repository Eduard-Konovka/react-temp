{"version":3,"sources":["components/Table/Table.jsx","components/SortSelector/SortSelector.jsx","pages/1/TableView.jsx","pages/2/TableView.jsx"],"names":["Table","items","map","item","id","value","SortSelector","options","onChange","evt","target","option","label","initialState","sortOptions","TableView","navigate","useNavigate","location","useLocation","useState","expenses","setExpenses","sortOrder","URLSearchParams","search","get","useEffect","prevExpenses","sort","a","b","order"],"mappings":"8JAAe,SAASA,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAC9B,OACE,kCACE,gCACE,+BACE,oCACA,4CAGJ,gCACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,+BACE,6BAAKA,EAAKC,KACV,6BAAKD,EAAKE,UAFHF,EAAKC,c,8ECXT,SAASE,EAAT,GAAqD,IAA7BC,EAA4B,EAA5BA,QAASF,EAAmB,EAAnBA,MAAOG,EAAY,EAAZA,SACrD,OACE,wBAAQH,MAAOA,EAAOG,SAAU,SAAAC,GAAG,OAAID,EAASC,EAAIC,OAAOL,QAA3D,SACGE,EAAQL,KAAI,SAAAS,GAAM,OACjB,wBAA2BN,MAAOM,EAAON,MAAzC,SACGM,EAAOC,OADGD,EAAON,c,mJCCtBQ,EAAe,CACnB,CAAET,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,MAGZS,EAAc,CAClB,CAAET,MAAO,YAAaO,MAAO,mFAC7B,CAAEP,MAAO,aAAcO,MAAO,kEAGjB,SAASG,IAAa,IAAD,EAC5BC,EAAWC,cACXC,EAAWC,cACjB,EAAgCC,mBAASP,GAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KAEMC,EAAS,UACb,IAAIC,gBAAgBN,EAASO,QAAQC,IAAI,iBAD5B,QACyC,YAwBxD,OAlBAC,qBAAU,WACgB,KAApBT,EAASO,QAIbT,EAAS,2BAAKE,GAAN,IAAgBO,OAAO,wBAC9B,CAACP,EAAUF,IAEdW,qBAAU,WACRL,GAAY,SAAAM,GAAY,OACtB,YAAIA,GAAcC,MAAK,SAACC,EAAGC,GACzB,MAAqB,cAAdR,EACHO,EAAEzB,MAAQ0B,EAAE1B,MACZ0B,EAAE1B,MAAQyB,EAAEzB,cAGnB,CAACkB,IAGF,qCACE,cAAC,IAAD,CACEhB,QAASO,EACTN,SA1BoB,SAAAwB,GACxBhB,EAAS,2BAAKE,GAAN,IAAgBO,OAAO,UAAD,OAAYO,OA0BtC3B,MAAOkB,IAET,cAAC,IAAD,CAAOtB,MAAOoB,S,mJClDdR,EAAe,CACnB,CAAET,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,MAGZS,EAAc,CAClB,CAAET,MAAO,YAAaO,MAAO,mFAC7B,CAAEP,MAAO,aAAcO,MAAO,kEAGjB,SAASG,IAAa,IAAD,EAC5BC,EAAWC,cACXC,EAAWC,cACjB,EAAgCC,mBAASP,GAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KAEMC,EAAS,UACb,IAAIC,gBAAgBN,EAASO,QAAQC,IAAI,iBAD5B,QACyC,YAwBxD,OAlBAC,qBAAU,WACgB,KAApBT,EAASO,QAIbT,EAAS,2BAAKE,GAAN,IAAgBO,OAAO,wBAC9B,CAACP,EAAUF,IAEdW,qBAAU,WACRL,GAAY,SAAAM,GAAY,OACtB,YAAIA,GAAcC,MAAK,SAACC,EAAGC,GACzB,MAAqB,cAAdR,EACHO,EAAEzB,MAAQ0B,EAAE1B,MACZ0B,EAAE1B,MAAQyB,EAAEzB,cAGnB,CAACkB,IAGF,qCACE,cAAC,IAAD,CACEhB,QAASO,EACTN,SA1BoB,SAAAwB,GACxBhB,EAAS,2BAAKE,GAAN,IAAgBO,OAAO,UAAD,OAAYO,OA0BtC3B,MAAOkB,IAET,cAAC,IAAD,CAAOtB,MAAOoB","file":"static/js/TableView.35457cf4.chunk.js","sourcesContent":["export default function Table({ items }) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.id}</td>\n            <td>{item.value}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","export default function SortSelector({ options, value, onChange }) {\n  return (\n    <select value={value} onChange={evt => onChange(evt.target.value)}>\n      {options.map(option => (\n        <option key={option.value} value={option.value}>\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Table from 'components/Table/Table';\nimport SortSelector from 'components/SortSelector/SortSelector';\n\nconst initialState = [\n  { id: 1, value: 100 },\n  { id: 2, value: 400 },\n  { id: 3, value: 200 },\n  { id: 4, value: 500 },\n  { id: 5, value: 300 },\n];\n\nconst sortOptions = [\n  { value: 'ascending', label: 'По возрастанию' },\n  { value: 'descending', label: 'По убыванию' },\n];\n\nexport default function TableView() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [expenses, setExpenses] = useState(initialState);\n\n  const sortOrder =\n    new URLSearchParams(location.search).get('sortBy') ?? 'ascending';\n\n  const onSortOrderChange = order => {\n    navigate({ ...location, search: `sortBy=${order}` });\n  };\n\n  useEffect(() => {\n    if (location.search !== '') {\n      return;\n    }\n\n    navigate({ ...location, search: `sortBy=ascending` });\n  }, [location, navigate]);\n\n  useEffect(() => {\n    setExpenses(prevExpenses =>\n      [...prevExpenses].sort((a, b) => {\n        return sortOrder === 'ascending'\n          ? a.value - b.value\n          : b.value - a.value;\n      }),\n    );\n  }, [sortOrder]);\n\n  return (\n    <>\n      <SortSelector\n        options={sortOptions}\n        onChange={onSortOrderChange}\n        value={sortOrder}\n      />\n      <Table items={expenses} />\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Table from 'components/Table/Table';\nimport SortSelector from 'components/SortSelector/SortSelector';\n\nconst initialState = [\n  { id: 1, value: 100 },\n  { id: 2, value: 400 },\n  { id: 3, value: 200 },\n  { id: 4, value: 500 },\n  { id: 5, value: 300 },\n];\n\nconst sortOptions = [\n  { value: 'ascending', label: 'По возрастанию' },\n  { value: 'descending', label: 'По убыванию' },\n];\n\nexport default function TableView() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [expenses, setExpenses] = useState(initialState);\n\n  const sortOrder =\n    new URLSearchParams(location.search).get('sortBy') ?? 'ascending';\n\n  const onSortOrderChange = order => {\n    navigate({ ...location, search: `sortBy=${order}` });\n  };\n\n  useEffect(() => {\n    if (location.search !== '') {\n      return;\n    }\n\n    navigate({ ...location, search: `sortBy=ascending` });\n  }, [location, navigate]);\n\n  useEffect(() => {\n    setExpenses(prevExpenses =>\n      [...prevExpenses].sort((a, b) => {\n        return sortOrder === 'ascending'\n          ? a.value - b.value\n          : b.value - a.value;\n      }),\n    );\n  }, [sortOrder]);\n\n  return (\n    <>\n      <SortSelector\n        options={sortOptions}\n        onChange={onSortOrderChange}\n        value={sortOrder}\n      />\n      <Table items={expenses} />\n    </>\n  );\n}\n"],"sourceRoot":""}